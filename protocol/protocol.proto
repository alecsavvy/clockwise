syntax = "proto3";

package protocol;
import "google/protobuf/any.proto";

option go_package = "./gen;gen";

service ClockwiseService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
}

enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  MESSAGE_TYPE_CREATE_USER = 1;
  MESSAGE_TYPE_FOLLOW_USER = 2;
  MESSAGE_TYPE_UNFOLLOW_USER = 3;
  MESSAGE_TYPE_CREATE_TRACK = 4;
  MESSAGE_TYPE_REPOST_TRACK = 5;
  MESSAGE_TYPE_UNREPOST_TRACK = 6;
}

message EnvelopeV2 {
  bytes data = 1;
  // sha256 hash of data bytes
  bytes hash = 2;
  // ECDSA signature of the hash
  bytes signature = 3;
  // hint for message type
  MessageType message_type = 4;
}

message RequestHeaders {
  // sha256 hash of data bytes
  bytes hash = 1;
  // ECDSA signature of the hash
  bytes signature = 2;
  // hint for message type
  MessageType message_type = 3;
}

message ResponseHeaders {
  bytes tx_hash = 1;
  bytes signature = 2;
}

message CreateUserRequest {
  RequestHeaders headers = 1;
  Data data = 2;
  message Data {
    string handle = 1;
    string bio = 2;
  }
}

message CreateUserResponse {
  ResponseHeaders headers = 1;
  Data data = 2;
  message Data {
    string address = 1;
    string handle = 2;
    string bio = 3;
  }
}

message Envelope {
  Headers headers = 1;
  google.protobuf.Any data = 2;
}

message Headers {
  string signature = 1;
  MessageType message_type = 2;
}

message CreateUser {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string address = 1;
    string handle = 2;
    string bio = 3;
  }
}

message FollowUser {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string follower_id = 1;
    string followee_id = 2;
  }
}

message UnfollowUser {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string follower_id = 1;
    string followee_id = 2;
  }
}

message CreateTrack {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string id = 1;
    string title = 2;
    string stream_url = 3;
    string description = 4;
    string user_id = 5;
  }
}

message RepostTrack {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string track_id = 1;
    string reposter_id = 2;
  }
}

message UnrepostTrack {
  Headers headers = 1;
  Data data = 2;
  message Data {
    string track_id = 1;
    string reposter_id = 2;
  }
}
