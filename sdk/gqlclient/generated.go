// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gqlclient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateUserCreateUser includes the requested fields of the GraphQL type User.
type CreateUserCreateUser struct {
	Handle  string `json:"handle"`
	Address string `json:"address"`
	Bio     string `json:"bio"`
	Txhash  string `json:"txhash"`
}

// GetHandle returns CreateUserCreateUser.Handle, and is useful for accessing the field via an interface.
func (v *CreateUserCreateUser) GetHandle() string { return v.Handle }

// GetAddress returns CreateUserCreateUser.Address, and is useful for accessing the field via an interface.
func (v *CreateUserCreateUser) GetAddress() string { return v.Address }

// GetBio returns CreateUserCreateUser.Bio, and is useful for accessing the field via an interface.
func (v *CreateUserCreateUser) GetBio() string { return v.Bio }

// GetTxhash returns CreateUserCreateUser.Txhash, and is useful for accessing the field via an interface.
func (v *CreateUserCreateUser) GetTxhash() string { return v.Txhash }

// CreateUserResponse is returned by CreateUser on success.
type CreateUserResponse struct {
	CreateUser CreateUserCreateUser `json:"createUser"`
}

// GetCreateUser returns CreateUserResponse.CreateUser, and is useful for accessing the field via an interface.
func (v *CreateUserResponse) GetCreateUser() CreateUserCreateUser { return v.CreateUser }

// __CreateUserInput is used internally by genqlient
type __CreateUserInput struct {
	Handle  string `json:"handle"`
	Address string `json:"address"`
	Bio     string `json:"bio"`
}

// GetHandle returns __CreateUserInput.Handle, and is useful for accessing the field via an interface.
func (v *__CreateUserInput) GetHandle() string { return v.Handle }

// GetAddress returns __CreateUserInput.Address, and is useful for accessing the field via an interface.
func (v *__CreateUserInput) GetAddress() string { return v.Address }

// GetBio returns __CreateUserInput.Bio, and is useful for accessing the field via an interface.
func (v *__CreateUserInput) GetBio() string { return v.Bio }

// The query or mutation executed by CreateUser.
const CreateUser_Operation = `
mutation CreateUser ($handle: String!, $address: String!, $bio: String!) {
	createUser(input: {handle:$handle,address:$address,bio:$bio}) {
		handle
		address
		bio
		txhash
	}
}
`

func CreateUser(
	ctx_ context.Context,
	client_ graphql.Client,
	handle string,
	address string,
	bio string,
) (*CreateUserResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateUser",
		Query:  CreateUser_Operation,
		Variables: &__CreateUserInput{
			Handle:  handle,
			Address: address,
			Bio:     bio,
		},
	}
	var err_ error

	var data_ CreateUserResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
